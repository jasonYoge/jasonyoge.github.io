---
import { dateString } from '@utils'
import { Icon } from 'astro-icon/components'
import type { CollectionEntry } from 'astro:content'
import { render } from 'astro:content'

interface Props {
  post: CollectionEntry<'posts'>
}

const { post } = Astro.props

const { remarkPluginFrontmatter } = await render(post)
const { minutesRead } = remarkPluginFrontmatter
const description = remarkPluginFrontmatter.description || post.data.properties.description
---

<article class="w-full py-5 my-4 border-accent/10">
  <h1 class="mb-3 text-2xl text-[var(--theme-h1)] font-semibold">
    <a href={`/posts/${post.id}`}># {post.data.properties.title}</a>
  </h1>
  <div class="text-foreground/80 my-3">
    {
      post.data.properties.date?.created_time &&
      <time>{dateString(new Date(post.data.properties.date?.created_time))}</time>
    }
    {
      post.data.properties.author?.people[0].name && (
        <span class="before:content-['::'] before:inline-block before:mx-0.5">
          {post.data.properties.author?.people[0].name}
        </span>
      )
    }
    {
      minutesRead && (
        <span class="before:content-['::'] before:inline-block before:mx-0.5">
          {minutesRead}
        </span>
      )
    }
  </div>
  {description && <p class="my-4 text-base/7 text-foreground">{description}</p>}
  {
    post.data.properties.tags && (
      <div class="text-accent mb-6">
        {post.data.properties.tags.map((tag) => (
          <a class="underline mr-4 inline-block" href={`/tags/${encodeURIComponent(tag)}`}>
            #{tag}
          </a>
        ))}
      </div>
    )
  }
  <div>
    <a class="button flex items-center" href={`/posts/${post.id}`}>
      Read
      <Icon name="chevrons-right" class="size-5 ml-2" />
    </a>
  </div>
</article>
